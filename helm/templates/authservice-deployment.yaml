{{- if .Values.authservice.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rancher-manager.fullname" . }}-authservice
  labels:
    {{- include "rancher-manager.labels" . | nindent 4 }}
    component: microservice
    service: authservice
spec:
  replicas: {{ .Values.authservice.replicaCount }}
  selector:
    matchLabels:
      {{- include "rancher-manager.selectorLabels" . | nindent 6 }}
      component: microservice
      service: authservice
  template:
    metadata:
      labels:
        {{- include "rancher-manager.selectorLabels" . | nindent 8 }}
        component: microservice
        service: authservice
    spec:
      containers:
        - name: authservice
          image: {{ .Values.authservice.image.repository }}:{{ .Values.authservice.image.tag }}
          imagePullPolicy: {{ .Values.authservice.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
            - name: grpc
              containerPort: 50051
              protocol: TCP
          env:
            {{- range $key, $value := .Values.authservice.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.authservice.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "rancher-manager.fullname" . }}-authservice
  labels:
    {{- include "rancher-manager.labels" . | nindent 4 }}
    component: microservice
    service: authservice
spec:
  type: {{ .Values.authservice.service.type }}
  ports:
    - port: {{ .Values.authservice.service.port }}
      targetPort: http
      protocol: TCP
      name: http
    - port: 50051
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    {{- include "rancher-manager.selectorLabels" . | nindent 4 }}
    component: microservice
    service: authservice
{{- if .Values.authservice.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "rancher-manager.fullname" . }}-authservice
  labels:
    {{- include "rancher-manager.labels" . | nindent 4 }}
    component: microservice
    service: authservice
  {{- with .Values.authservice.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.authservice.ingress.className }}
  ingressClassName: {{ .Values.authservice.ingress.className }}
  {{- end }}
  rules:
    {{- range .Values.authservice.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ include "rancher-manager.fullname" $ }}-authservice
                port:
                  number: {{ $.Values.authservice.service.port }}
          {{- end }}
    {{- end }}
{{- end }}
{{- end }} 