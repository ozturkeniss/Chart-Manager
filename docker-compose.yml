version: '3.8'

services:
  # PostgreSQL for AuthService
  postgres-auth:
    image: postgres:15-alpine
    container_name: rancher-postgres-auth
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    networks:
      - rancher-network

  # PostgreSQL for InventoryService
  postgres-inventory:
    image: postgres:15-alpine
    container_name: rancher-postgres-inventory
    environment:
      POSTGRES_DB: inventory_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres_inventory_data:/var/lib/postgresql/data
    networks:
      - rancher-network

  # MongoDB for ItemService
  mongo:
    image: mongo:6.0
    container_name: rancher-mongo
    environment:
      MONGO_INITDB_DATABASE: item_db
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - rancher-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: rancher-redis
    ports:
      - "6379:6379"
    networks:
      - rancher-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: rancher-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - rancher-network

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: rancher-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - rancher-network

  # AuthService
  authservice:
    build:
      context: .
      dockerfile: docker/Dockerfile.authservice
    container_name: rancher-authservice
    ports:
      - "8001:8081"
    environment:
      - DATABASE_URL=host=postgres-auth user=postgres password=postgres dbname=auth_db port=5432 sslmode=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-secret-key-here
      - PORT=8081
    depends_on:
      - postgres-auth
      - redis
    networks:
      - rancher-network

  # ItemService
  itemservice:
    build:
      context: .
      dockerfile: docker/Dockerfile.itemservice
    container_name: rancher-itemservice
    ports:
      - "8002:8082"
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - AUTH_SERVICE_ADDR=authservice:50051
      - KAFKA_BROKERS=kafka:29092
    depends_on:
      - mongo
      - kafka
      - authservice
    networks:
      - rancher-network

  # InventoryService
  inventoryservice:
    build:
      context: .
      dockerfile: docker/Dockerfile.inventoryservice
    container_name: rancher-inventoryservice
    ports:
      - "8003:8083"
    environment:
      - DATABASE_URL=host=postgres-inventory user=postgres password=postgres dbname=inventory_db port=5432 sslmode=disable
      - AUTH_SERVICE_ADDR=authservice:50051
      - ITEM_SERVICE_ADDR=itemservice:50052
      - KAFKA_BROKERS=kafka:29092
    depends_on:
      - postgres-inventory
      - kafka
      - itemservice
    networks:
      - rancher-network

  # Fiber Gateway
  fibergateway:
    build:
      context: .
      dockerfile: docker/Dockerfile.fibergateway
    container_name: rancher-fibergateway
    ports:
      - "8080:8080"
    environment:
      - AUTH_SERVICE_URL=http://authservice:8081
      - ITEM_SERVICE_URL=http://itemservice:8082
      - INVENTORY_SERVICE_URL=http://inventoryservice:8083
    depends_on:
      - authservice
      - itemservice
      - inventoryservice
    networks:
      - rancher-network

volumes:
  postgres_auth_data:
  postgres_inventory_data:
  mongo_data:

networks:
  rancher-network:
    driver: bridge 